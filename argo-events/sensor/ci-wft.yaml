apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: ci
spec:
  serviceAccountName: argo
  templates:
  - name: build-node-service
    inputs:
      parameters:
      - name: revision
      artifacts:
      - name: code
        path: /node/git
        git:
          revision: main
          repo: git@github.com:lightuptw/messenger-services.git
          # revision: "{{inputs.parameters.revision}}"
          branch: main
          singleBranch: true
          sshPrivateKeySecret:
            name: github-creds
            key: sshprivatekey
          insecureIgnoreHostKey: true   
    container:
      image: node:20-bullseye
      command: [sh, -c]
      args: ["
          cd /node/git &&
          npm install -g pnpm &&
          pnpm config set store-dir /cache/.pnpm-store && 
          cd ./apps/mail &&
          pnpm i &&
          pnpm build
          "]      
      # args: ["
      #     cd /node/git "]
      volumeMounts:
      - name: workdir
        mountPath: /node
      - name: cache
        mountPath: /cache
      resources:
        # limits:
        #   memory: 5Gi
        requests:
          memory: 5Gi    
          cpu: 4
  - name: get-cache-image
    inputs:   
      parameters:
        - name: env
        - name: app
        - name: updated_at      
        - name: image
          value: asia-east1-docker.pkg.dev/lightup-tw/lightup/microservices-ci-cache
    container:
      #argo is gonna ask for a command - the debug version allows us to exec this way i think
      image: gcr.io/kaniko-project/warmer:latest
      imagePullPolicy: Always
      # command: ["/kaniko/executor"]
      args: [
        "--cache-dir=/cache",
        "--image=node:20-alpine3.18",
        # "--image={{inputs.parameters.image}}:187beb87b2ee51df66fe1d26f672a47ce008dd0b06506b6f874efc41d1db30af",
        "--image=asia-east1-docker.pkg.dev/lightup-tw/lightup/microservices/cache-store:latest",
        # "--image=asia-east1-docker.pkg.dev/lightup-tw/lightup/microservices/cache-prod-pkg:latest",
      ]
      env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /secret/kaniko-secret/kaniko-secret.json        
      volumeMounts:
        - name: cache
          mountPath: /cache 
        - name: kaniko-secret
          readOnly: true
          mountPath: "/secret/kaniko-secret"                  
      resources:
        requests:
          cpu: 2
          memory: 4Gi            
  - name: build-image
    inputs:
      parameters:
        - name: env
        - name: app
        - name: updated_at
        - name: image_target
        - name: image_name
    container:
      #argo is gonna ask for a command - the debug version allows us to exec this way i think
      image: gcr.io/kaniko-project/executor:v1.22.0-debug
      imagePullPolicy: Always
      command: ["/kaniko/executor"]
      args:
        [
          "--dockerfile=/node/git/ci/dev.Dockerfile",
          "--context=git://$(GITHUB_TOKEN)@github.com/lightuptw/messenger-services.git#refs/heads/dev-mail",          
          "--dockerfile=/kaniko/buildcontext/ci/dev.Dockerfile",
          "--cache-run-layers=true",
          "--cache-copy-layers=false",
          # "--destination=asia-east1-docker.pkg.dev/lightup-tw/lightup/mail:123",
          "--destination=asia-east1-docker.pkg.dev/lightup-tw/lightup/microservices/{{=inputs.parameters.image_name}}",
          # "--destination=asia-east1-docker.pkg.dev/lightup-tw/lightup/{{inputs.parameters.app}}:{{inputs.parameters.env}}-{{=sprig.replace(':', '-',inputs.parameters.updated_at)}}",

          "--cache-repo=asia-east1-docker.pkg.dev/lightup-tw/lightup/microservices-ci-cache",
          "--cache=true",
          # "--cache=false",
          "--cache-dir=/cache",
          # "--snapshot-mode=redo",
          "--snapshot-mode=time",
          "--target={{=inputs.parameters.image_target}}",
          "--build-arg=targetApp={{=inputs.parameters.app}}",
          # "--no-push"
          "--single-snapshot",
          "--use-new-run",
          "--skip-unused-stages",
        ]
      env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /secret/kaniko-secret/kaniko-secret.json  
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: github-access
      volumeMounts:
        # - name: workdir
        #   mountPath: /cache
        - name: workdir
          mountPath: /cache          
        - name: kaniko-secret
          readOnly: true
          mountPath: "/secret/kaniko-secret"                             
      resources:
        requests:
          cpu: 2
          memory: 4Gi  
  - name: slack-send
    inputs:
      parameters:
        - name: msg
        - name: channel
          value: ci_cd        
    container: 
      args: 
      # - $(WEBHOOK_URL)
      - 'https://slack.com/api/chat.postMessage'
      - '-H'
      - 'Authorization: Bearer $(TOKEN)'
      - '-H'
      - 'Content-Type: application/json'
      - '--data'
      - '{"channel": "{{inputs.parameters.channel}}", "text": "{{inputs.parameters.msg}}"}'
      command:
      - curl
      env:
        - name: TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: slack-secret
      image: curlimages/curl:7.84.0
      name: curl
      resources:
        limits:
          memory: 100Mi
        requests:
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        runAsGroup: 1000
        runAsUser: 1000     
