apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: github
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: test-dep
      eventSourceName: github
      eventName: example
      filters:
        data:
          # Type of Github event that triggered the delivery: [pull_request, push, issues, label, ...]
          # https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads
          - path: headers.X-Github-Event
            type: string
            value:
              - push
          - path: body.ref
            type: string
            comparator: "="
            value:
              # - refs/heads/dev-mail
              - refs/heads/dev
              # - '{{=sprig.splitList("-",sprig.splitList("/",workflow.parameters.ref)[2])[0]}}'     
            template: '{{index (splitList "-" .Input) 0}}'      
          # - path: body.repository.full_name
          #   type: string
          #   value:
          #     - lightuptw/messenger-services              
  triggers:
    - template:
        name: github-workflow-trigger
        k8s:
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: github-
              spec:
                entrypoint: docker-build
                onExit: exit
                volumes:
                  - name: cache
                    persistentVolumeClaim:
                      claimName: pv-cache                
                  - name: kaniko-secret
                    secret:
                      secretName: kaniko-secret     
                  - name: slack-secret
                    secret:
                      secretName: slack-secret 
                  - name: github-access
                    secret:
                      secretName: github-access                      
                volumeClaimTemplates:
                - metadata:
                    name: workdir
                  spec:
                    storageClassName: local-path
                    # volumeName: ci-pv
                    accessModes: 
                    - ReadWriteOnce
                    resources:
                      requests:
                        storage: 4Gi                                        
                arguments:
                  parameters:
                    - name: name
                    - name: ref
                    - name: updated_at
                templates:
                  - name: exit
                    inputs:
                      parameters:
                        - name: name
                        - name: env
                          value: '{{=sprig.splitList("-",sprig.splitList("/",workflow.parameters.ref)[2])[0]}}'
                        - name: app
                          value: '{{=sprig.splitList("-",sprig.splitList("/",workflow.parameters.ref)[2])[1]}}'            
                        - name: channel
                          value: ci_cd        
                    container: 
                      args: 
                      # - $(WEBHOOK_URL)
                      - 'https://slack.com/api/chat.postMessage'
                      - '-H'
                      - 'Authorization: Bearer $(TOKEN)'
                      - '-H'
                      - 'Content-Type: application/json'
                      - '--data'
                      - '{"channel": "{{inputs.parameters.channel}}", "text": "{{inputs.parameters.name}} {{inputs.parameters.app}} {{workflow.status}}"}'
                      command:
                      - curl
                      env:
                        - name: TOKEN
                          valueFrom:
                            secretKeyRef:
                              key: token
                              name: slack-secret
                      image: curlimages/curl:7.84.0
                      name: curl
                      resources:
                        limits:
                          memory: 100Mi
                        requests:
                          memory: 50Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        runAsGroup: 1000
                        runAsUser: 1000      
                    arguments:
                      parameters:
                        - name: name
                          value: '{{workflow.parameters.name}}'                          
                        - name: env
                          value: '{{=sprig.splitList("-",sprig.splitList("/",workflow.parameters.ref)[2])[0]}}'
                        - name: app
                          value: '{{=sprig.splitList("-",sprig.splitList("/",workflow.parameters.ref)[2])[1]}}'                     
                        - name: updated_at
                          value: '{{workflow.parameters.updated_at}}'                                         
                  - name: docker-build
                    dag:
                      tasks:
                        - name: get-cache-image
                          arguments:
                            parameters:
                              - name: name
                                value: '{{workflow.parameters.name}}'                          
                              - name: env
                                value: '{{=sprig.splitList("-",sprig.splitList("/",workflow.parameters.ref)[2])[0]}}'
                              - name: app
                                value: '{{=sprig.splitList("-",sprig.splitList("/",workflow.parameters.ref)[2])[1]}}'                     
                              - name: updated_at
                                value: '{{workflow.parameters.updated_at}}'
                          templateRef: 
                            name: ci
                            template: get-cache-image   
                        - name: build-image 
                          dependencies: [get-cache-image]
                          arguments:
                            parameters:
                              - name: name
                                value: '{{workflow.parameters.name}}'                          
                              - name: env
                                value: '{{=sprig.splitList("-",sprig.splitList("/",workflow.parameters.ref)[2])[0]}}'
                              - name: app
                                value: '{{=sprig.splitList("-",sprig.splitList("/",workflow.parameters.ref)[2])[1]}}'                     
                              - name: updated_at
                                value: '{{workflow.parameters.updated_at}}'
                              # - name: image_target
                              #   value: cache-store                             
                              # - name: image_target
                              #   value: cache-prod-pkg
                              # - name: image_name
                              #   value: cache-prod-pkg
                              # app
                              - name: image_target
                                value: app                
                              - name: image_name
                                value: '{{=sprig.splitList("-",sprig.splitList("/",workflow.parameters.ref)[2])[1]}}'                      
                          templateRef: 
                            name: ci
                            template: build-image                                                   
                  # - name: docker-build
                  #   steps: 
                  #   - - name: get-cache-image
                  #       arguments:
                  #         parameters:
                  #           - name: name
                  #             value: '{{workflow.parameters.name}}'                          
                  #           - name: env
                  #             value: '{{=sprig.splitList("-",sprig.splitList("/",workflow.parameters.ref)[2])[0]}}'
                  #           - name: app
                  #             value: '{{=sprig.splitList("-",sprig.splitList("/",workflow.parameters.ref)[2])[1]}}'                     
                  #           - name: updated_at
                  #             value: '{{workflow.parameters.updated_at}}'
                  #       templateRef: 
                  #         name: ci
                  #         template: get-cache-image                                               
                  #   - - name: build-prod-pkg-image 
                  #       arguments:
                  #         parameters:
                  #           - name: name
                  #             value: '{{workflow.parameters.name}}'                          
                  #           - name: env
                  #             value: '{{=sprig.splitList("-",sprig.splitList("/",workflow.parameters.ref)[2])[0]}}'
                  #           - name: app
                  #             value: '{{=sprig.splitList("-",sprig.splitList("/",workflow.parameters.ref)[2])[1]}}'                     
                  #           - name: updated_at
                  #             value: '{{workflow.parameters.updated_at}}'
                  #           # - name: image_target
                  #           #   value: cache-store                             
                  #           # - name: image_target
                  #           #   value: cache-prod-pkg
                  #           # - name: image_name
                  #           #   value: cache-prod-pkg
                  #           # app
                  #           - name: image_target
                  #             value: app                
                  #           - name: image_name
                  #             value: '{{=sprig.splitList("-",sprig.splitList("/",workflow.parameters.ref)[2])[1]}}'                      
                  #       templateRef: 
                  #         name: ci
                  #         template: build-image                         
          parameters:
            - src:
                dependencyName: test-dep
                dataKey: body.repository.full_name
              dest: spec.arguments.parameters.0.value
            - src:
                dependencyName: test-dep
                dataKey: body.ref
              dest: spec.arguments.parameters.1.value     
            - src:
                dependencyName: test-dep
                dataKey: body.repository.updated_at
              dest: spec.arguments.parameters.2.value                 


                      
              
            # - src:
            #     dependencyName: test-dep
            #     dataKey: body.pull_request.number
            #   dest: spec.arguments.parameters.1.value
            # - src:
            #     dependencyName: test-dep
            #     dataTemplate: "{{ .Input.body.pull_request.head.sha | substr 0 7 }}"
            #   dest: spec.arguments.parameters.2.value
            # # Append pull request number and short sha to dynamically assign workflow name <github-21500-2c065a>
            # - src:
            #     dependencyName: test-dep
            #     dataTemplate: "{{ .Input.body.pull_request.number }}-{{ .Input.body.pull_request.head.sha | substr 0 7 }}"
            #   dest: metadata.name
            #   operation: append
      retryStrategy:
        steps: 3  